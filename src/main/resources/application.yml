spring:
  profiles:
    group:
      "dev": "dev-db,sample-data"
      "dev-no-db-initialization": "dev-db"
      "prod": "prod-db"
    active: "dev-no-db-initialization"
  jpa:
    # 서버 작동 시, table 계속 create 하도록 설정
    database: mysql
    hibernate:
      ddl-auto: create
    # sql 관련 log
    properties:
      hibernate:
        default_batch_fetch_size: 100
        show_sql: true
        format_sql: true
        use_sql_comments: true

  # .sql 파일 실행하도록 하는 설정.
  datasource:
    initialization-mode: always
  # image size 최대 크기 조정
  servlet:
    multipart:
      max-file-size: 128MB
      max-request-size: 128MB
      enabled: true

# 나중에 값 바꾸고, 외부로 옮길 것.
jwt:
  header: Authorization
  token-validity-in-seconds: '86400'
  secret: emFtb25nLWFuZC1vcmFuZ2UtY29sbGFib3JhdGlvbi1ieS1vdXItbmV3LXVuaXZlcnNpdHktYXBwbGljYXRpb24tem1jYW1wdXMtYnktc2VpbHBhcmstUy15dW4tcHJvamVjdC1ieS1saXRjaXRydXMK


logging:
  level:
    com.litCitrus.zamongcampusServer: debug

    org:
      hibernate:
        type:
          descriptor:
            sql: trace

---
spring:
  config:
    activate:
      on-profile: "dev"
cors:
  url: "http://localhost:3000"
---
spring:
  config:
    activate:
      on-profile: "dev-no-db-initialization"
  jpa:
    # 서버 작동 시, table 계속 create 하도록 설정
    hibernate:
      ddl-auto: validate
  # .sql 파일 실행하도록 하는 설정.
  datasource:
    initialization-mode: never
cors:
  url: "http://localhost:3000"

---
spring:
  config:
    activate:
      on-profile: "prod"
cors:
  url: "http://43.201.34.37:3000"